name: Evaluate predictions

on:
  schedule:
    - cron: '0 22 * * *'
  workflow_dispatch:

env:
    MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}
    MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TRACKING_USERNAME }}
    MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
    MONGO_USERNAME: ${{ secrets.MONGO_USERNAME }}   
    MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

permissions:
  contents: read

jobs:
  train_model:
    defaults:
      run:
        shell: bash
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: 'main'

      - uses: actions/setup-python@v2
        with:
          python-version: '3.11.3'
          
      - name: cache poetry install
        uses: actions/cache@v2
        with:
          path: ~/.local
          key: poetry-1.8.2

      - uses: snok/install-poetry@v1
        with:
          version: 1.8.2
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: cache deps
        id: cache-deps
        uses: actions/cache@v2
        with:
          path: .venv
          key: pydeps-${{ hashFiles('**/poetry.lock') }}

      - run: poetry install --no-interaction --no-root
        if: steps.cache-deps.outputs.cache-hit != 'true'

      - run: poetry install --no-interaction

      - name: Setup DVC
        uses: iterative/setup-dvc@v1
        with:
          version: '3.48.4'
  
      - name: Setup Dagshub
        run: |
          poetry run dvc remote modify origin endpointurl https://dagshub.com/trdin.peter10/RNNSistem.s3
          poetry run dvc remote modify origin --local access_key_id ${{ secrets.ACCESS_KEY_ID }}
          poetry run dvc remote modify origin --local secret_access_key ${{ secrets.SECRET_ACCESS_KEY }}

          
      - name: Pull data
        run: |
          poetry run dvc pull -r origin
          
      - name: Evaluate predictions
        run: |
          poetry run test_pred